buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'forge'

minecraft {
    version = version_minecraft + "-" + version_forge
    if (project.hasProperty("version_mappings")) mappings = version_mappings
    runDir = "run"
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        if (project.hasProperty("mainClass")) attributes 'Main-Class': mainClass
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from 'build/docs/javadoc'
    classifier = 'javadoc'
}

build {
    dependsOn deobfJar
    dependsOn sourceJar
    dependsOn javadocJar
}

/*publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact deobfJar
            artifact sourceJar
            artifact javadocJar
        }
    }

    // Use -PmavenUsername and -PmavenPassword
    repositories.maven {
        if (!(project.hasProperty("mavenUrl") &&
                project.hasProperty("mavenUsername") &&
                project.hasProperty("mavenPassword")))
            return;

        credentials {
            username mavenUsername
            password mavenPassword
        }
        url mavenUrl
    }
}*/